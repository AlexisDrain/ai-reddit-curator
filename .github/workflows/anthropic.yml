name: Claude Reddit Curator poster

on:
  schedule:
    - cron: '40 11 * * *' # lanuch at 11:40 UTC time
  workflow_dispatch:

jobs:
  run-claude-sample:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.4'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install anthropic
    
    
    - name: Run Anthropic script with at most 3 retries
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        max_attempts=3
        attempt=1
        until python ./python/daily_script.py || [ $attempt -eq $max_attempts ]; do
          echo "Attempt $attempt failed. Retrying..."
          attempt=$((attempt + 1))
          sleep 5  # Optional: add a delay between retries
        done
        
        if [ $attempt -eq $max_attempts ] && [ $? -ne 0 ]; then
          echo "All attempts failed. Exiting with error."
          exit 1
        fi

    #- name: Debug - List directory contents
    #  run: |
    #    echo "Contents of website/dailyData:"
    #    ls -l website/dailyData || echo "Directory not found"

    - name: Debug - Check new output files
      run: |
        echo "Checking for new files in website/dailyData:"
        new_files=$(git ls-files --others --exclude-standard website/dailyData/)
        if [ -z "$new_files" ]; then
          echo "No new files found."
        else
          echo "New files found:"
          for file in $new_files; do
            echo "File: $file"
            echo "File size:"
            ls -l "$file"
            echo "----------------------"
          done
        fi

    - name: Configure Git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Check for changes and create commit
      id: git-check
      run: |
        git add website/dailyData/*.json website/dailyData/datesIndex.jsonl
        if [[ -n "$(git diff --staged)" ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          git commit -m "Update daily data from Claude Reddit Curator"
        else
          echo "No changes detected"
        fi
  
    - name: Push changes and create/merge PR
      if: steps.git-check.outputs.changes == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Function to log messages
        log_message() {
          echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
        }

        # Generate a unique branch name
        branch_name="update-daily-data-$(date +%Y%m%d-%H%M%S)"
        log_message "Generated branch name: $branch_name"

        # Create and switch to the new branch
        git checkout -b $branch_name
        log_message "Created and switched to new branch"

        # Push the changes to the new branch
        if git push origin $branch_name; then
          log_message "Pushed changes to new branch"
        else
          log_message "Failed to push changes to new branch"
          exit 1
        fi

        # Check if GitHub CLI is installed, install if not
        if ! command -v gh &> /dev/null; then
          log_message "Installing GitHub CLI"
          sudo apt update && sudo apt install gh -y
        fi

        # Create the pull request
        log_message "Creating pull request"
        pr_url=$(gh pr create --title "Update: Daily data from Claude Reddit Curator" --body "Automated update of daily data files." --base main --head $branch_name)
        
        if [ -z "$pr_url" ]; then
          log_message "Failed to create pull request"
          exit 1
        fi
        
        log_message "Pull request created: $pr_url"

        # Wait for a short period to allow for any immediate checks
        sleep 30

        # Attempt to merge the pull request
        log_message "Attempting to merge pull request"
        for i in {1..3}; do
          if gh pr merge $pr_url --merge --auto; then
            log_message "Successfully merged pull request"
            exit 0
          else
            log_message "Merge attempt $i failed, waiting before retry"
            sleep 30
          fi
        done

        log_message "Failed to merge pull request after 3 attempts"
        exit 1

    - name: Debug - PR Creation and Merge
      if: steps.git-check.outputs.changes == 'true'
      run: |
        echo "Pull request creation and merge attempted"
        echo "Check the Actions tab and repository for the merged changes"